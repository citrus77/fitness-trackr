{"version":3,"sources":["util/index.js","components/Activities.js","components/App.js","components/Home.js","components/LoginRegister.js","components/MyRoutines.js","components/Routines.js","components/SingleActivity.js","components/SingleRoutine.js","index.js"],"names":["REACT_APP_API_URL","process","callApi","a","url","method","token","body","options","toUpperCase","headers","JSON","stringify","fetch","response","json","data","error","console","Activities","activities","fetchActivities","localStorage","getItem","useState","name","setName","description","setDescription","history","useHistory","handleSubmit","e","preventDefault","push","className","onSubmit","type","placeholder","value","onChange","target","map","activity","id","App","publicRoutines","setPublicRoutines","setActivities","setToken","userName","setUserName","userRoutines","setUserRoutines","Number","userId","setUserId","fetchPublicRoutines","fetchedRoutines","fetchUserRoutines","localToken","localUsername","fetchedActivities","props","useEffect","foundToken","foundUserName","foundUserId","to","onClick","removeItem","exact","path","Home","LoginRegister","username","setUsername","password","setPassword","verPass","setVerPass","setError","params","useParams","setItem","user","disabled","length","MyRoutines","goal","setGoal","isPublic","setIsPublic","duration","setDuration","count","setCount","activityId","setActivityId","handleAddRoutine","handleDeleteRoutine","routineId","handleAddActivity","routine","Routines","SingleActivity","children","SingleRoutine","creatorName","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.dc1826e2.chunk.js","sourcesContent":["const { REACT_APP_API_URL } = process.env;\n\nexport const callApi = async ({url, method, token, body}) => {\n  try {\n    const options = {\n      method: method ? method.toUpperCase() : 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(body)\n    };\n    if (token) options.headers['Authorization'] = `Bearer ${token}`;\n\n    const response = await fetch(`${REACT_APP_API_URL}${url}`, options);\n    const data = await response.json();\n    if(data.error) {\n      return ({error: data.error})\n    }\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}","import React,{ useState } from 'react';\nimport { callApi } from '../util';\nimport {  useHistory } from 'react-router';\nimport { SingleActivity } from './'\n\n\nconst Activities = ({ activities, fetchActivities }) => {\n    const token = localStorage.getItem('token');\n    const [name, setName] = useState('');\n    const [description, setDescription] = useState('');\n\n    const history = useHistory();\n    \n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await callApi({\n                url: '/activities',\n                method: 'POST',\n                body: { name, description },\n                token\n            })\n            if (response) {\n                await fetchActivities();\n                setName('');\n                setDescription('');\n                history.push('/activities')\n            }\n            return response;            \n        } catch (error) {\n            console.error (error);\n        };\n    };\n\n    return <>\n        {\n        token\n            ? <div className='form-container'>\n                <form onSubmit={handleSubmit}>\n                    <fieldset>\n                        <label>Name: </label>\n                        <input type='text' placeholder='enter activity name' value={name} onChange={(e) => {setName(e.target.value)}}></input>\n                    </fieldset>\n                    <fieldset>\n                        <label>Description: </label>\n                        <input type='text' value={description} placeholder='enter activity description' onChange={(e) => {setDescription(e.target.value)}}></input>\n                    </fieldset>\n                    <button type='submit'>Add activity</button>\n                </form>\n            </div>\n            : null\n        }    \n        {\n        activities \n            ? <div className='activities'>\n                    <span>Activities:</span>\n                    {\n                    activities.map(activity => <SingleActivity key={activity.id} activity={activity} />)\n                    }\n                </div>\n            \n            : 'Loading...'\n        }\n    </>\n};\n\nexport default Activities;","import React, { useState, useEffect } from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport { useHistory } from 'react-router';\n\nimport {\n    Activities,\n    Home,\n    LoginRegister,\n    MyRoutines,\n    Routines\n} from './'\n\nimport { callApi } from '../util';\n\nconst App = () => {\n    const [publicRoutines, setPublicRoutines] = useState([]);\n    const [activities, setActivities] = useState([]);\n    const [token, setToken] = useState('');\n    const [userName, setUserName] = useState('');\n    const [userRoutines, setUserRoutines] = useState([]);\n    const [userId, setUserId] = useState(Number)\n\n    const history = useHistory();\n    \n    const fetchPublicRoutines = async () => {\n        try {\n            const fetchedRoutines = await callApi ({ url: `/routines` });\n            if (fetchedRoutines) {\n                setPublicRoutines(fetchedRoutines);\n            };\n            return;            \n        } catch (error) {\n            console.error(error);\n        };        \n    };\n\n    const fetchUserRoutines = async () => {\n        const localToken = localStorage.getItem('token');\n        const localUsername = localStorage.getItem('username');\n        try {\n            if (localUsername) {\n                const fetchedRoutines = await callApi ({ url: `/users/${localUsername}/routines`, token: `${localToken}` });\n                if (fetchedRoutines) {\n                    setUserRoutines(fetchedRoutines);\n                };\n            };\n            return;            \n        } catch (error) {\n            console.error(error);\n        };        \n    };     \n\n    const fetchActivities = async () => {\n        try {\n            const fetchedActivities = await callApi ({ url: `/activities` });\n            if (fetchedActivities) {\n                setActivities(fetchedActivities);\n            };\n            return;\n        } catch (error) {\n            console.error (error);\n        };        \n    };\n\n    const props = {\n        activities,\n        setActivities,\n        publicRoutines,\n        setPublicRoutines,\n        token,\n        setToken,\n        userId,\n        setUserId,\n        userName,\n        setUserName,\n        userRoutines,\n        setUserRoutines,\n\n        fetchActivities,\n        fetchPublicRoutines,\n        fetchUserRoutines\n    };\n\n    useEffect(() => {\n        try {\n            fetchActivities();\n            fetchPublicRoutines();\n            fetchUserRoutines();\n            if (token) {\n                fetchUserRoutines();\n            };\n        } catch (error) {\n            console.error(error);\n        };\n    }, [token])\n\n    useEffect(() => {\n        const foundToken = localStorage.getItem('token');\n        const foundUserName = localStorage.getItem('username');\n        const foundUserId = localStorage.getItem('userId');\n        if (foundToken) {\n            setToken(foundToken);\n        };\n        if (foundUserName) {\n            setUserName(foundUserName);\n        };\n        if (foundUserId) {\n            setUserName(foundUserId);\n        }\n    });\n\n    return <>\n        <header className='site-header'>\n            <div className='logo'>Fitness Trac.kr</div>\n            <div className='link-bar'>\n                <Link to='/' className='nav-link'>Home</Link>\n                <Link to='/routines' className='nav-link'>Routines</Link>\n                {\n                 token ? <Link to='/user/routines' className='nav-link'>My Routines</Link> : null  \n                }\n                <Link to='/activities' className='nav-link'>Activities</Link>\n                {\n                 token \n                    ? <button className='logout' onClick={() => {\n                        localStorage.removeItem('token');\n                        localStorage.removeItem('username');\n                        localStorage.removeItem('userId');\n                        setUserName('');\n                        setToken('');\n                        setUserRoutines([]);\n                        history.push('/');\n                    }}>Log out</button>\n                    : <Link to='/account/login' className='nav-link'>Sign in</Link>\n                }\n            </div>\n        </header>\n\n        <main>\n            <Route exact path='/'>\n                <Home {...props} />\n            </Route>\n\n            <Route exact path='/routines'>\n                <Routines {...props} />\n            </Route>\n\n            <Route exact path='/activities'>\n                <Activities {...props} />\n            </Route>\n\n            <Route exact path='/user/routines'>\n                <MyRoutines {...props} />\n            </Route>\n\n            <Route exact path='/account/:method'>\n                <LoginRegister {...props} />\n            </Route>\n        </main>\n    </>;\n};\n\nexport default App;","import React from 'react';\n\nconst Home = () => {\n    return <>\n        <div>\n            Welcome to FitnessTrac.kr\n        </div>\n    </>;\n};\n\nexport default Home;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom'\nimport { useParams, useHistory } from 'react-router';\nimport { callApi } from '../util';\n\nconst LoginRegister = ({ fetchUserRoutines, setToken, setUserName, setUserId }) => {\n    const [ username, setUsername ] = useState('');\n    const [ password, setPassword ] = useState('');\n    const [ verPass, setVerPass ] = useState('');\n    const [ error, setError] = useState('');\n    const params = useParams();\n    const history = useHistory();\n\n    return <> \n        <div className='form-container'>\n            <div className='login-header'>            \n                {\n                params.method === 'register' \n                    ? <h3 className='header'>Register a new account</h3> \n                    : <h3 className='header'>Login to your account</h3>\n                }           \n            </div>\n            <form className='login-form' onSubmit={async (e) =>{\n                e.preventDefault();\n                try{ \n                    const response = await callApi ({\n                        url: `/users/${params.method}`,\n                        method: 'POST',\n                        body: { username, password }                        \n                    });\n                    if (response.error) {\n                        setError(response.error);\n                    };\n                    if (response.token) {\n                        const { token } = response;\n                        setToken(token);\n                        localStorage.setItem('token', token);\n                        const user = await callApi({ url: '/users/me', token})\n                        if (user) {\n                            setUserName(user.username);\n                            localStorage.setItem('username', user.username);\n                            setUserId(user.id)\n                            localStorage.setItem('userId', user.id)\n                            await fetchUserRoutines();\n                            setUsername('');\n                            setPassword('');\n                            history.push('/user/routines');\n                        }\n                    }\n                } catch(error) {\n                    console.error(error);\n                };                \n            }}>\n                <fieldset className='input-fieldset'>\n                    <label>User name</label>\n                    <input \n                        className='input-field' \n                        type='text'\n                        name='Login Name'\n                        placeholder='enter your user name' \n                        onChange={(e) => setUsername(e.target.value)}\n                    />\n                </fieldset>\n\n                <fieldset className='input-fieldset'>\n                    <label>Password</label>\n                    <input \n                        className='input-field' \n                        type='password' \n                        name='Password'\n                        placeholder='password (min length 6 chars)' \n                        onChange={(e) => setPassword(e.target.value)}\n                    />\n                </fieldset>\n\n                {\n                params.method === 'register' \n                    ? <fieldset className='input-fieldset'>\n                        <label>Verify Password</label>\n                            <input \n                                className='input-field' \n                                type='password' \n                                name='Verify Password'\n                                placeholder='re-enter your password' \n                                onChange={(e) => setVerPass(e.target.value)}\n                            />\n                    </fieldset>\n                    : ''\n                }\n                \n                {\n                params.method === 'register' \n                    ? <button className='login-button' type=\"submit\" disabled={!password || !username || password.length < 8 || password !== verPass }>\n                        Register\n                    </button> \n                    : <button className='login-button' type=\"submit\" disabled={!password || !username || password.length < 8 }>\n                        Login\n                    </button>\n                }\n                { params.method === 'register' && password !== verPass && <span className='password-alert'>Passwords must match!</span> }\n\n                { params.method === 'register' && password.length < 8 && <span className='password-alert'>Passwords must contain at least 8 characters!</span> }\n\n                { error\n                    ? <span>{error}</span>\n                    : null\n                }\n\n                {\n                params.method === 'register' \n                ? <>\n                    <span>Already have an account yet? </span>\n                    <Link to=\"/account/login\" className='login-link'>\n                        Click here to log in!\n                    </Link>\n                </> \n                : <>\n                    <span>Already have an account yet? </span>\n                    <Link to=\"/account/register\" className='login-link'>\n                        Click here to register!\n                    </Link>\n                </>\n                }\n            </form>            \n    </div>\n</>\n};\n\nexport default LoginRegister;","import React, { useState } from 'react';\nimport { useHistory } from 'react-router';\n\nimport { SingleRoutine } from './'\nimport { callApi } from '../util';\n\nconst MyRoutines = ({ activities, fetchPublicRoutines, fetchUserRoutines, userRoutines }) => {\n    const [name, setName] = useState('');\n    const [goal, setGoal] = useState('');\n    const [isPublic, setIsPublic] = useState(false);\n    const [error, setError] = useState('');\n    const [duration, setDuration] = useState(Number);\n    const [count, setCount] = useState(Number);\n    const [activityId, setActivityId] = useState(Number)\n\n    const token = localStorage.getItem('token');\n    const history = useHistory();\n\n    const handleAddRoutine = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await callApi({\n                url: `/routines`,\n                method: \"POST\",\n                body: {name, goal, isPublic},\n                token\n            })\n            if (response.error) {\n                setError(response.error);\n            };\n            if (response) {\n                await callApi({url: '/routines', token});\n                setName('');\n                setGoal('');\n                setIsPublic(false);\n                await fetchPublicRoutines();\n                await fetchUserRoutines();\n                history.push('/user/routines');\n            };\n            return response;\n        } catch (error) {\n            console.error(error);\n        };\n    };\n\n    const handleDeleteRoutine = async (routineId) => {\n        try {\n            await callApi({\n                url: `/routines/${routineId}`, \n                method: \"DELETE\",\n                token            \n            })\n            await callApi({url: '/routines', token});\n            fetchUserRoutines();\n            fetchPublicRoutines();\n            history.push('/user/routines');\n        } catch (error) {\n            console.error(error);\n        };    \n    };\n\n    const handleEditRoutine = (routineId) => async (e) => {\n        e.preventDefault();\n        try {\n            const response = await callApi({\n                url: `routines/${routineId}`,\n                method: 'PATCH',\n                body: { name, goal },\n                token\n            });\n            if (response.error) {\n                setError(response.error);\n            };\n            if (response) {\n                setName('');\n                setGoal('');\n                setIsPublic(false);\n                await fetchPublicRoutines();\n                await fetchUserRoutines();\n                history.push('/user/routines');\n            };\n            return response;\n        } catch (error) {\n            console.error (error);\n        };\n    };\n\n    const handleAddActivity = (routineId) => async (e) => {\n        e.preventDefault();\n        try {\n            const response = await callApi({\n                url: `/routines/${routineId}/activities`,\n                method: 'POST',\n                body: { activityId, count, duration },\n                token\n            });\n            if (response) {\n                await fetchUserRoutines();\n            }\n            return response;\n        } catch (error) {\n            console.error(error);\n        };\n    };\n\n    return <>\n        <div className='form-container'>\n            <form onSubmit={handleAddRoutine}>\n                <label>Create a new routine:</label>\n                <fieldset>\n                    <label>Name: </label>\n                    <input type='text' placeholder=' enter name' onChange={(e) => {setName(e.target.value)}} />\n                </fieldset>\n                <fieldset>\n                    <label>Goal: </label>\n                    <input type='text' placeholder=' enter goal' onChange={(e) => {setGoal(e.target.value)}} />\n                </fieldset>\n                <fieldset>\n                    <label>Public: </label>\n                    <select placeholder='no' onChange={(e) => {setIsPublic(e.target.value)}}>\n                        <option value='false'>NO</option>\n                        <option value='true'>YES</option>\n                    </select>\n                </fieldset>\n                <button type='submit'>Create Routine</button>\n                { error\n                    ? <div className='password-alert'>{error}</div>\n                    : null\n                }\n            </form>\n        </div>\n        \n        { userRoutines.length > 0\n            ? \n                <div className='routines'>\n                    <span>Routines:</span>\n                    {\n                    userRoutines.map(routine => <SingleRoutine key={routine.id} routine={routine}>\n\n                        { <button onClick={() => handleDeleteRoutine(routine.id)}>Delete routine</button> }\n                        \n                        { <div>\n                            <h3>Edit Routine</h3>\n                            <form onSubmit={handleEditRoutine(routine.id)}>\n                                <fieldset>\n                                    <label>Change name: </label>\n                                    <input type='text' value={name} placeholder={routine.name} onChange={(e) => setName(e.target.value)} />\n                                </fieldset>\n                                <fieldset>\n                                    <label>Change goal: </label>\n                                    <input type='text' value={goal} placeholder={routine.goal} onChange={(e) => setGoal(e.target.value)} />\n                                </fieldset>\n                            </form>\n                            <button type='submit'>Submit changes</button>\n                        </div> }\n\n                        { <div>\n                            <h3>Add activity to routine</h3>\n                            <form onSubmit={handleAddActivity(routine.id)}>\n                                <select onChange={(e) => setActivityId(e.target.value)}>\n                                {activities.map(activity => <option key={activity.id} value={activity.id}>{activity.name}</option>)}\n                                </select>\n                                <fieldset>\n                                    <label>Count: </label>\n                                    <input type='number' placeholder='number of repetitions' onChange={(e) => setCount(e.target.value)}></input>\n                                </fieldset>\n                                <fieldset>\n                                    <label>Duration: </label>\n                                    <input type='number' placeholder='number of minutes' onChange={(e) => setDuration(e.target.value)}></input>\n                                </fieldset>\n                                <button type='submit'>Add activity</button>\n                            </form>\n                        </div> }\n\n                    </SingleRoutine>)\n                    }\n                </div>\n            \n            : null }\n    </>\n};\n\nexport default MyRoutines;","import React from 'react';\n\nimport { SingleRoutine } from './'\n\nconst Routines = ({ publicRoutines }) => {\n    return publicRoutines\n        ? <>\n            <div className='routines'>\n                <span>Routines:</span>\n                {\n                publicRoutines.map(routine => <SingleRoutine key={routine.id} routine={routine} />)\n                }\n            </div>\n        </>\n        : 'Loading...'\n};\n\nexport default Routines;","import React from 'react';\n\nconst SingleActivity = ({ children, activity }) => {\n    return activity \n        ? <div className='activity-single'>\n            <span>Name: {activity.name}</span>\n            <span>Description: {activity.description}</span>\n\n            { children }\n            \n        </div>\n        : 'Loading...'\n};\n\nexport default SingleActivity;","import React from 'react';\n\nimport { SingleActivity } from './'\n\nconst SingleRoutine = ({ children, routine }) => {\n\n    return routine \n        ? <div className='routine-single'>\n            <span><h3>{routine.name}</h3></span>\n            <span><h3 className='creator-name'>created by {routine.creatorName}</h3></span>\n            <span>Goal: {routine.goal}</span>\n            <span>Public: {routine.isPublic ? 'yes': 'no' }</span>\n\n            { children }\n\n            {\n            routine.activities.length > 0 && <div className='activities'>\n                <span>Activities:</span>\n                <ul className='activities-list'>\n                {\n                 routine.activities.map(activity => <li className='activity-single' key={activity.id}>\n                     <SingleActivity activity={activity}>\n                     {\n                        <>\n                            <span>Repetition: {activity.count} times</span>\n                            <span>Duration: {activity.duration} minutes</span>\n                        </>\n                     }\n                    </SingleActivity>\n                </li>)\n                }\n                </ul>\n            </div>\n            }\n        </div>\n        : 'Loading...'\n};\n\nexport default SingleRoutine;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nimport { App } from './components'\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>,\n  document.querySelector('#app')\n);"],"sourceRoot":""}